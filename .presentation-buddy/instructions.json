[
  {
    "type": "command",
    "command": "workbench.action.closeAllEditors"
  },

  {
    "type": "createFile",
    "path": "src/registration/registration-form.test.tsx"
  },
  {
    "type": "typeText",
    "text": [
      "import React from 'react';",
      "import '@testing-library/jest-dom/extend-expect';",
      "import { render } from '@testing-library/react';",
      "",
      "import RegistrationForm from './registration-form';",
      "",
      "describe('The RegistrationForm', () => {",
      "  test('render the empty registration form', () => {",
      "    const { getByText, getByLabelText } = render(<RegistrationForm />);",
      "",
      "    expect(getByText('Registration')).toBeVisible();",
      "    expect(getByText('Register')).toBeVisible();",
      "    expect(getByLabelText('Firstname')).toBeVisible();",
      "    expect(getByLabelText('Lastname')).toBeVisible();",
      "    expect(getByLabelText('Country')).toBeVisible();",
      "    expect(getByLabelText('State')).toBeVisible();",
      "  });",
      "});",
      ""
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "createFile",
    "path": "src/registration/registration-form.tsx"
  },
  {
    "type": "typeText",
    "text": [
      "  import React from 'react';",
      "",
      "  const RegistrationForm = () => {",
      "    return null;",
      "  };",
      "",
      "  export default RegistrationForm;",
      ""
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "goto",
    "line": 4,
    "column": 10
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand"
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "type": "typeText",
    "text": ["<div>"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["", ""]
  },
  {
    "type": "goto",
    "line": 4,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "      <h2>"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "goto",
    "line": 5,
    "column": 11
  },
  {
    "type": "typeText",
    "text": ["Registration"]
  },
  {
    "type": "goto",
    "line": 5,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "      <div>"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["<label htmlFor=\"firstName\">"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["Firstname"]
  },
  {
    "type": "goto",
    "line": 6,
    "column": 56
  },
  {
    "type": "typeText",
    "text": ["<input type=\"text\" id=\"firstName\" name=\"firstName\"/>"]
  },
  {
    "type": "goto",
    "line": 6,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "      <div>"]
  },
  {
    "type": "wait",
    "delay": 250
  },

  {
    "type": "typeText",
    "text": ["<label htmlFor=\"lastName\">"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["Lastname"]
  },
  {
    "type": "goto",
    "line": 7,
    "column": 54
  },
  {
    "type": "typeText",
    "text": ["<input type=\"text\" id=\"lastName\" name=\"lastName\"/>"]
  },
  {
    "type": "goto",
    "line": 7,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "      <div>"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["<label htmlFor=\"country\">"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["Country"]
  },
  {
    "type": "goto",
    "line": 8,
    "column": 52
  },
  {
    "type": "typeText",
    "text": ["<select id=\"country\" name=\"country\">"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["<option value=\"NL\">"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["Netherlands"]
  },
  {
    "type": "goto",
    "line": 8,
    "column": 127
  },
  {
    "type": "typeText",
    "text": ["<option value=\"USA\">"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["USA"]
  },
  {
    "type": "goto",
    "line": 8,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "      <div>"]
  },
  {
    "type": "wait",
    "delay": 250
  },

  {
    "type": "typeText",
    "text": ["<label htmlFor=\"state\">"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["State"]
  },
  {
    "type": "goto",
    "line": 9,
    "column": 48
  },
  {
    "type": "typeText",
    "text": ["<input type=\"text\" id=\"state\" name=\"state\"/>"]
  },

  {
    "type": "goto",
    "line": 9,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "      <div>"]
  },
  {
    "type": "wait",
    "delay": 250
  },

  {
    "type": "typeText",
    "text": ["<button>"]
  },
  {
    "type": "wait",
    "delay": 250
  },
  {
    "type": "typeText",
    "text": ["Register"]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "openFile",
    "path": "src/registration/registration-form.test.tsx"
  },
  {
    "type": "goto",
    "line": 17,
    "column": 999
  },
  {
    "type": "typeText",
    "text": [
      "",
      "",
      "  test('render the populated registration form', () => {",
      "    const person = {firstName: 'Maurice', lastName: 'de Beijer', country: 'NL', state: ''};",
      "    const { getByText, getByLabelText } = render(<RegistrationForm person={person} />);",
      "",
      "    expect(getByText('Registration')).toBeVisible();",
      "    expect(getByText('Register')).toBeVisible();",
      "    expect(getByLabelText('Firstname')).toHaveValue('Maurice');",
      "    expect(getByLabelText('Lastname')).toHaveValue('de Beijer');",
      "    expect(getByLabelText('Country')).toHaveValue('NL');",
      "    expect(getByLabelText('State')).toHaveValue('');",
      "  });",
      ""
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "openFile",
    "path": "src/registration/registration-form.tsx"
  },
  {
    "type": "goto",
    "line": 3,
    "column": 27
  },
  {
    "type": "typeText",
    "text": ["{person}: any"]
  },
  {
    "type": "goto",
    "line": 32
  },
  {
    "type": "typeText",
    "text": [
      "",
      "RegistrationForm.defaultProps = { person: {firstName: '', lastName: '', country: 'NL', state: ''} };",
      "",
      "type Person = typeof RegistrationForm.defaultProps.person",
      ""
    ]
  },
  {
    "type": "goto",
    "line": 9,
    "column": 60
  },
  {
    "type": "typeText",
    "text": ["value={person.firstName} "]
  },
  {
    "type": "goto",
    "line": 13,
    "column": 58
  },
  {
    "type": "typeText",
    "text": ["value={person.lastName} "]
  },
  {
    "type": "goto",
    "line": 17,
    "column": 44
  },
  {
    "type": "typeText",
    "text": [" value={person.country}"]
  },
  {
    "type": "goto",
    "line": 24,
    "column": 52
  },
  {
    "type": "typeText",
    "text": ["value={person.state} "]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "openFile",
    "path": "src/registration/registration-form.tsx"
  },
  {
    "type": "goto",
    "line": 3,
    "column": 35
  },
  {
    "type": "typeText",
    "text": [": initalPerson"]
  },
  {
    "type": "goto",
    "line": 3,
    "column": 999
  },
  {
    "type": "typeText",
    "text": [
      "",
      "  const [person, setPerson] = React.useState<Person>(initalPerson);",
      "",
      "  const handleChange = ({ target }: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {",
      "    setPerson((p: Person) => ({ ...p, [target.name]: target.value }));",
      "  };",
      ""
    ]
  },
  {
    "type": "goto",
    "line": 19,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "          onChange={handleChange}"]
  },
  {
    "type": "goto",
    "line": 29,
    "column": 999
  },
  {
    "type": "typeText",
    "text": ["", "          onChange={handleChange}"]
  },
  {
    "type": "goto",
    "line": 35,
    "column": 67
  },
  {
    "type": "typeText",
    "text": [" onChange={handleChange}"]
  },
  {
    "type": "goto",
    "line": 42,
    "column": 73
  },
  {
    "type": "typeText",
    "text": [" onChange={handleChange}"]
  },

  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "openFile",
    "path": "src/registration/registration-form.test.tsx"
  },
  {
    "type": "goto",
    "line": 12,
    "column": 35
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "typeText",
    "text": ["toBeDisabled"]
  },
  {
    "type": "goto",
    "line": 31,
    "column": 35
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "typeText",
    "text": ["toBeEnabled"]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "openFile",
    "path": "src/registration/registration-form.tsx"
  },
  {
    "type": "goto",
    "line": 58,
    "column": 16
  },
  {
    "type": "typeText",
    "text": [" disabled={!person.firstName || !person.lastName}"]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "openFile",
    "path": "src/registration/registration-form.test.tsx"
  },
  {
    "type": "goto",
    "line": 9,
    "column": 38
  },
  {
    "type": "typeText",
    "text": [", queryByLabelText"]
  },
  {
    "type": "goto",
    "line": 16,
    "column": 12
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "typeText",
    "text": ["queryByLabelText"]
  },
  {
    "type": "goto",
    "line": 16,
    "column": 39
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "typeText",
    "text": ["not.toBeInTheDocument"]
  },
  {
    "type": "goto",
    "line": 26,
    "column": 38
  },
  {
    "type": "typeText",
    "text": [", queryByLabelText"]
  },
  {
    "type": "goto",
    "line": 35,
    "column": 12
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "typeText",
    "text": ["queryByLabelText"]
  },
  {
    "type": "goto",
    "line": 35,
    "column": 39
  },
  {
    "type": "command",
    "command": "editor.action.smartSelect.expand",
    "repeat": 2
  },
  {
    "type": "typeText",
    "text": ["not.toBeInTheDocument"]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "openFile",
    "path": "src/registration/registration-form.tsx"
  },
  {
    "type": "goto",
    "line": 47,
    "column": 7
  },
  {
    "type": "typeText",
    "text": ["{person.country === 'USA' && (", ""]
  },
  {
    "type": "goto",
    "line": 57,
    "column": 999
  },

  {
    "type": "typeText",
    "text": ["", ")}", ""]
  },

  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": true,
    "type": "wait",
    "delay": "manual"
  }
]
